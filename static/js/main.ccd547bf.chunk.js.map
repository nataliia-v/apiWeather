{"version":3,"sources":["App.module.css","components/Tabs/Tabs.module.css","components/Quote/Quote.module.css","components/NextDay/NextDay.module.css","components/NowDay/NowDay.module.css","components/Inputlocality/InputLocalityJs.js","components/NextDay/NextDay.js","components/NowDay/NowDay.js","components/Tabs/Tabs.js","components/Quote/Quote.js","App.js","serviceWorker.js","index.js","components/Inputlocality/InputLocalityJs.module.css"],"names":["module","exports","App","mainWrap","loading","wrapLoader","loadBackground","flex","buttons","fl","nameToday","quote","titleQuote","bodyQuote","author","itemWrap","date","weatherSection","left","right","nameTime","blockFlex","conditionIcon","itemDay","weatherSection2","conditionText","temp_c","InputLocality","state","time","Date","_this2","this","update","setInterval","setState","clearInterval","_this$props","props","cityNameUpdate","name","country","localtime","react_default","a","createElement","className","style","locality","onSubmit","inputLocal","type","placeholder","cityCard","wrap","imgWrap","width","height","src","alt","textBlock","localTime","toLocaleString","Component","NextDay","_ref","forecastDays","map","item","key","id","day","condition","text","icon","maxtemp_c","mintemp_c","avghumidity","maxwind_kph","NowDay","iconUrl","pressure_mb","humidity","wind_kph","sunrise","sunset","Tabs","oneDay","tenDays","_this","_this$state","Fragment","onClick","components_NowDay_NowDay","components_NextDay_NextDay","Quote","axios","get","then","response","data","contents","quotes","title","console","log","getQuote","isLoading","cityName","numForecastDay","e","preventDefault","target","city","value","updateWeather","URL","concat","location","current","forecast","forecastday","astro","catch","err","error","_this$state2","bgIMG","react_loader_spinner_default","color","margin","backgroundImage","InputLocalityJs","Tabs_Tabs","components_Quote_Quote","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ccd547bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__n_Rfy\",\"mainWrap\":\"App_mainWrap__1FLan\",\"loading\":\"App_loading__X313s\",\"wrapLoader\":\"App_wrapLoader__1Hev3\",\"loadBackground\":\"App_loadBackground__3tRkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"Tabs_flex__RVIG-\",\"buttons\":\"Tabs_buttons__3WQS-\",\"fl\":\"Tabs_fl__2OTOy\",\"nameToday\":\"Tabs_nameToday__3vrUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"Quote_quote__20jqG\",\"titleQuote\":\"Quote_titleQuote__314oK\",\"bodyQuote\":\"Quote_bodyQuote__3G5Oc\",\"author\":\"Quote_author__2RYPs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrap\":\"NextDay_itemWrap__e7ef4\",\"date\":\"NextDay_date__1bZl8\",\"weatherSection\":\"NextDay_weatherSection__NJZyJ\",\"left\":\"NextDay_left__2YSy4\",\"right\":\"NextDay_right__8Vzmz\",\"nameTime\":\"NextDay_nameTime__29401\",\"blockFlex\":\"NextDay_blockFlex__1_mTp\",\"conditionIcon\":\"NextDay_conditionIcon__1cMpS\",\"itemDay\":\"NextDay_itemDay__XsjDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemDay\":\"NowDay_itemDay__2B4--\",\"date\":\"NowDay_date__1gamH\",\"weatherSection\":\"NowDay_weatherSection__w_Uib\",\"weatherSection2\":\"NowDay_weatherSection2__p9SzF\",\"left\":\"NowDay_left__BmOxC\",\"right\":\"NowDay_right__1cBy0\",\"nameTime\":\"NowDay_nameTime__MPVy_\",\"blockFlex\":\"NowDay_blockFlex__aamwd\",\"conditionText\":\"NowDay_conditionText__1tlp6\",\"temp_c\":\"NowDay_temp_c__3u1wK\",\"conditionIcon\":\"NowDay_conditionIcon__2XO7W\",\"fl\":\"NowDay_fl__2t2sa\"};","import React, { Component } from \"react\";\nimport style from \"./InputLocalityJs.module.css\";\n\nclass InputLocality extends Component{\n\n  state={\n    time: new Date(),\n  };\n\n  componentDidMount() {\n    this.update = setInterval(() => {\n        this.setState({time:new Date()});\n      }, 1000\n    )}\n  componentWillUnmount () {\n    clearInterval(this.update)\n  }\n\n\n\n  render() {\n\n    const {time} = this.state;\n\nconst {cityNameUpdate, name, country, localtime} = this.props;\n\n    return  (\n      <div className={style.locality}>\n        <form onSubmit={cityNameUpdate}>\n          <input className={style.inputLocal} type=\"text\" name='city' placeholder=\"Input your locality\"/>\n        </form>\n        <div className={style.cityCard}>\n          <div className={style.wrap}>\n            <div className={style.imgWrap}>\n              <img width=\"50px\" height=\"50px\" src=\"https://image.flaticon.com/icons/svg/616/616450.svg\" alt=\"\"/>\n            </div>\n            <div className={style.textBlock}>\n              <p>{name}, {country}</p>\n            </div>\n          </div>\n          <p className={style.localTime}>{time.toLocaleString()}</p>\n        </div>\n      </div>\n\n    )\n}\n}\n\n\nexport default InputLocality;\n","import React, { Component } from \"react\";\nimport style from \"./NextDay.module.css\"\n\nlet NextDay = ({forecastDays}) => (\n  <div>\n    <div  className={style.itemDay}>\n      {forecastDays.map(item => (\n        <div key={item.id} className={style.itemWrap}>\n          <p className={style.date}>{item.date}</p>\n          <div className={style.weatherSection}>\n\n            <div className={style.blockFlex}>\n\n              <div className={style.left}>\n                <p className={style.conditionText}>{item.day.condition.text}</p>\n                <img className={style.conditionIcon} src={item.day.condition.icon} alt=\"\"/>\n                <p className={style.temp_c}>Max t {item.day.maxtemp_c} C</p>\n                <p className={style.temp_c}>Min t {item.day.mintemp_c} C</p>\n              </div>\n\n              <div className={style.right}>\n                <p>Humidity: {item.day.avghumidity} %</p>\n                <p>Wind: {item.day.maxwind_kph}</p>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nexport default NextDay\n\n","import React from 'react';\nimport style from \"./NowDay.module.css\"\n\n\n\nlet NowDay = ({text, iconUrl, temp_c, pressure_mb, humidity, maxtemp_c, mintemp_c, sunrise, sunset, wind_kph}) => (\n  <div className={style.fl}>\n    <div className={style.itemDay}>\n\n      <div className={style.weatherSection2}>\n\n\n\n      </div>\n      <div className={style.weatherSection}>\n\n        <div className={style.blockFlex}>\n          <div className={style.left}>\n            <p className={style.conditionText}>{text}</p>\n            <img className={style.conditionIcon} src={iconUrl} alt=\"\"/>\n            <p className={style.temp_c}>Temp: {temp_c} C</p>\n          </div>\n          <div className={style.right}>\n            <p>P: {pressure_mb} mm Hg</p>\n            <p>Wind: {wind_kph}</p>\n            <p>Min C {mintemp_c}</p>\n            <p>Max C {maxtemp_c}</p>\n            <p>Humidity {humidity}</p>\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n);\n\nexport default NowDay;","import React, { Component } from \"react\";\nimport style from \"./Tabs.module.css\";\nimport NextDay from \"../NextDay/NextDay\";\nimport NowDay from \"../NowDay/NowDay\";\n\n\nexport default class Tabs extends Component {\n  state = {\n    oneDay: true,\n    tenDays: false\n  };\n\n  oneDay = () => this.setState({ oneDay: true, tenDays: false });\n  tenDays = () => this.setState({ oneDay: false, tenDays: true });\n\n\n  render() {\n    const { oneDay, tenDays } = this.state;\n    const {text, iconUrl, temp_c, pressure_mb, humidity, maxtemp_c, mintemp_c, sunrise, sunset, wind_kph, forecastDays} = this.props;\n    return(\n      <>\n        <div className={style.buttons}>\n          <div className={style.flex}>\n            <div onClick={this.oneDay}>\n              <p className={style.nameToday}>TODAY</p>\n            </div>\n            <div onClick={this.tenDays}>\n              <p className={style.nameToday}>LOOK AT THIS WEEK</p>\n            </div>\n          </div>\n\n          {oneDay && <>\n            <div className={style.fl}>\n              <NowDay text={text} iconUrl={iconUrl} temp_c={temp_c} pressure_mb={pressure_mb} humidity={humidity} maxtemp_c={maxtemp_c} mintemp_c={mintemp_c} sunrise={sunrise} sunset={sunset} wind_kph={wind_kph} />\n            </div>\n           </>}\n          {tenDays && <>\n            <div>\n              <NextDay key={\"key\"} forecastDays={forecastDays} />\n            </div></>}\n        </div>\n      </>\n    )\n  }\n}","import React, {Component} from 'react';\nimport style from \"./Quote.module.css\";\nimport axios from 'axios';\n\nclass Quote extends Component {\n\n  state = {\n    quote: \" \"\n  };\n\n  getQuote(){\n    // const {quote} = this.state;\n\n    const URL = `https://quotes.rest/qod.json`;\n\n    axios.get(URL)\n      .then(response => {\n        return response.data;\n      })\n      .then( data => {\n        this.setState({\n          quote : data.contents.quotes[0].quote,\n          author: data.contents.quotes[0].author,\n          title: data.contents.quotes[0].title,\n        });\n        console.log(data.contents.quotes[0].quote);\n      })\n  }\n\n  componentDidMount() {\n    this.getQuote()\n  }\n\n  render(){\n    const {quote, author, title} = this.state;\n\n    return(\n      <div className={style.quote}>\n        <hr/>\n        <h2 className={style.titleQuote}>{title}</h2>\n        <div className={style.bodyQuote}>{quote}</div>\n        <p className={style.author}>{author}</p>\n      </div>\n    )\n  }\n\n}\n\nexport default Quote;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport style from './App.module.css';\nimport InputLocality from \"./components/Inputlocality/InputLocalityJs\";\nimport Tabs from \"./components/Tabs/Tabs\";\nimport Loader from \"react-loader-spinner\"\nimport Quote from \"./components/Quote/Quote\";\n\nconst WEATHER_KEY = '29db13c2e8994c13af183516192204';\n\nclass App extends Component {\n\n  state ={\n    isLoading: true,\n    cityName: \"kiev\",\n    numForecastDay: 8,\n  };\n\n  updateWeather() {\n    const {cityName, numForecastDay} = this.state;\n    const URL = `https://api.apixu.com/v1/forecast.json?key=${WEATHER_KEY}&q=${cityName}&days=${numForecastDay}`;\n    axios.get(URL)\n      .then(response => {\n        return response.data;\n      })\n      .then( data => {\n\n        console.log(data);\n        this.setState({\n          isLoading: false,\n          cityName: data.location.name,\n          temp_c: data.current.temp_c,\n          text: data.current.condition.text,\n          iconUrl: data.current.condition.icon,\n          forecastDays: data.forecast.forecastday,\n          pressure_mb: data.current.pressure_mb,\n          humidity: data.current.humidity,\n          maxtemp_c: data.forecast.forecastday[0].day.maxtemp_c,\n          mintemp_c: data.forecast.forecastday[0].day.mintemp_c,\n          sunrise: data.forecast.forecastday[0].astro.sunrise,\n          sunset: data.forecast.forecastday[0].astro.sunset,\n          wind_kph: data.current.wind_kph,\n          name: data.location.name,\n          country: data.location.country,\n          localtime: data.location.localtime\n        })\n      })\n\n      .catch(err => {\n        if (err) console.error(\"Cannot fetch Weather Data from API\", err);\n      })\n  }\n\n  componentDidMount() {\n    this.updateWeather();\n  }\n\n  cityNameUpdate = e => {\n    e.preventDefault();\n    this.setState({\n      cityName: e.target.city.value\n    }, () => this.updateWeather())\n  };\n\n  render() {\n    const {isLoading, temp_c, text, iconUrl, forecastDays, pressure_mb, humidity, maxtemp_c, mintemp_c, sunrise, sunset, wind_kph, name, country, localtime, bgIMG} = this.state;\n    return (\n      <div className={style.App}>\n        {isLoading ? <div className={style.loadBackground}>\n\n          <div className={style.wrapLoader}>\n            <h2  className={style.loading}>Loading</h2>\n            <Loader\n            type=\"Circles\" color=\"mediumpurple\" height={80} width={80} margin=\"100px\"\n          /> </div>\n        </div>: (\n            <div className={style.mainWrap}>\n              <div className={style.flex} style={{backgroundImage: `url(${bgIMG})`}}>\n                <InputLocality localtime={localtime} name={name} country={country} cityNameUpdate={this.cityNameUpdate} />\n                <Tabs text={text} iconUrl={iconUrl} forecastDays={forecastDays} temp_c={temp_c} pressure_mb={pressure_mb} humidity={humidity} maxtemp_c={maxtemp_c} mintemp_c={mintemp_c} sunrise={sunrise} sunset={sunset} wind_kph={wind_kph}/>\n              </div>\n              <Quote/>\n            </div>\n        )}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputLocal\":\"InputLocalityJs_inputLocal__3aReG\",\"locality\":\"InputLocalityJs_locality__16ZIS\",\"cityCard\":\"InputLocalityJs_cityCard__vgqHX\",\"wrap\":\"InputLocalityJs_wrap__3fAzz\",\"imgWrap\":\"InputLocalityJs_imgWrap__39Ptn\",\"localTime\":\"InputLocalityJs_localTime__QGo82\"};"],"sourceRoot":""}